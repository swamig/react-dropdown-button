{
  "name": "react-menus",
  "version": "1.1.0",
  "description": "A carefully crafted menu widget for React",
  "main": "lib/index.js",
  "author": {
    "name": "ZippyUI",
    "email": "contact@zippyui.com"
  },
  "contributors": [],
  "scripts": {
    "test": "make",
    "lib": "gulp",
    "build-style": "webpack --colors --progress --config build-style.config.js",
    "build": "npm run lib && npm run dist && npm run dist.min",
    "dist": "webpack --progress --colors --config dist.config.js",
    "dist.min": "webpack --progress --colors --optimize-minimize --optimize-occurence-order --optimize-dedupe --config dist.min.config.js",
    "serve": "http-server",
    "dev": "webpack-dev-server --progress --colors --port 8090"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/zippyui/react-menus"
  },
  "keywords": [
    "menu",
    "react-component",
    "menu-ui",
    "menus",
    "menu",
    "widget",
    "component",
    "react"
  ],
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/zippyui/react-menus/issues"
  },
  "homepage": "https://github.com/zippyui/react-menus",
  "devDependencies": {
    "css-loader": "^0.9.0",
    "extract-text-webpack-plugin": "^0.3.4",
    "file-loader": "^0.8.1",
    "gulp": "^3.8.11",
    "gulp-react": "^3.0.0",
    "http-server": "^0.7.3",
    "jsx-loader": "^0.12.1",
    "style-loader": "^0.8.2",
    "stylus-loader": "^0.4.0",
    "url-loader": "^0.5.5",
    "webpack": "^1.4.13",
    "webpack-dev-server": "^1.6.5"
  },
  "dependencies": {
    "arrow-style": "^1.1.1",
    "buffer-function": "^1.0.0",
    "has-touch": "^1.0.1",
    "object-assign": "^2.0.0",
    "point-in-triangle": "^1.0.1",
    "react-clonewithprops": "^1.0.1",
    "react-event-names": "^1.0.0",
    "react-style-normalizer": "^1.2.0",
    "region": "^2.1.2",
    "region-align": "^2.1.2",
    "select-parent": "^1.0.1"
  },
  "peerDependencies": {
    "react": ">=0.12.0"
  },
  "readme": "react-menus\n===========\n\n> A carefully crafted menu for React\n\n## Install\n\n```sh\n$ npm install react-menus --save\n```\n\n## Description\n\nThe `react-menus` component is a context-menu like widget for React. It features **smart positioning**, overflow **scrolling** on too many menu items and **smart submenu positioning**.\n\n## Changelog\n\nSee [Changelog](./CHANGELOG.md)\n\n## Roadmap\n\nSee [Roadmap](./ROADMAP.md)\n\n## Usage\n\n```jsx\nvar items = [\n    {\n        label: 'hello',\n        onClick: function(itemProps, index, event) {\n            console.log('well, hello')\n        }\n    },\n    '-', //show separator\n    {\n        label: 'hi'\n    },\n    {\n\t\tlabel: 'export',\n\t\tdisabled: true\n\t}\n]\n\nfunction onClick(event, props, index){\n\n}\n\n<Menu items={items} onClick={onClick}/>\n```\n\nFor rendering separators, just use a `'-'` in the items array.\n\n## Properties\n\n * items: Object[]\n * onClick: Function(event, props, index) - Called on a click on a direct menu item. For clicks on menu items at any level of nesting, use `onChildClick`\n * onChildClick: Function(event, props) - Called when a menu item at any level of nesting was clicked\n * columns: String[] - defaults to ['label']\n\nFor every item in the items property, a row will be rendered, with all the columns specified in `props.columns`. Every column displays the value in item[&lt;column_name&gt;].\n\nEvery item can optionally have an **onClick** property, which is called when the item is clicked. (**onClick: Function(event, itemProps, index)**). Making an item disabled is done by specifying **disabled: true** on the item object.\n\n * expander: String/ReactElement - an expander tool to use when a menu item has other subitems. Defaults to the unicode arrow character **â€º**.\n\n### Styling & advanced usage\n\nBy default, the `react-menus` component comes with built-in structural styles as well as with styles for a default nice theme. The specified theme is applied to menu items. If you don't want to render menu items with the default theme, just specify `theme=''` (or any falsy value).\n\n```jsx\nvar items = [ {label: 'Save', onClick: function(){} }, { label: 'Export'}]\n<Menu theme='' items={items} />\n```\n\nOr you can specify your own theme for the button. The value for the `theme` property is just an object with different styles:\n\n```jsx\nvar theme = {\n\tstyle: { background: 'blue'},\n\toverStyle: { background: 'red', color: 'white'},\n\tactiveStyle: { background: 'magenta'},\n\texpandedStyle: { background: 'magenta'},\n\tdisabledStyle: {background: 'gray'}\n}\n\n<Menu theme={theme} items={items} />\n```\n\nOr you can specify a theme as string: 'default'. The `'default'` theme is the only one built in.\n\n```jsx\n<Menu theme='default' />\n```\nBut you can add named themes:\n```jsx\nvar theme = require('react-menus').theme\n\ntheme.goldenTheme = { overStyle: {background: 'yellow'}}\n\n<Menu theme='goldenTheme' />\n```\n\nFor styling menu separators, set the desired style properties on `Menu.Separator.style`\n\n```jsx\nvar Menu = require('react-menus')\n\nvar Separator = Menu.Separator\n\nSeparator.style = {\n    background: 'red' //the color of the separator\n}\n\nSeparator.size = 10 //will be 10 px in height\n```\n\n### Style props\n\nStyling menu items overrides theme styles.\n\n * itemStyle - style to be applied to menu items. Overrides `theme.style`\n * itemOverStyle - style to be applied to menu items on mouse over. Overrides `theme.overStyle`\n * itemActiveStyle - style to be applied to menu items on mouse down on the item. Overrides `theme.activeStyle`\n * itemExpandedStyle - style to be applied to menu items when the item is expanded. Overrides `theme.expandedStyle`\n * itemDisabledStyle - style to be applied to disabled menu items. Overrides `theme.defaultStyle`\n\n * cellStyle - style to be applied to menu item cells (expect the expander cell).\n\n### Scrolling\n\nMenu scrolling is enabled by default (`enableScroll: true`). When you have too many items, and the menu is bigger than it's parent container, the menu shows a scrolling user interface.\n\nOr you can specify a `maxHeight` property on the menu, and if that is exceeded, the menu is scrollable.\n\n```jsx\n<Menu maxHeight={200} items={items}/>\n```\n\nOf course you can turn off scrolling with `enableScroll: false`\n\n### Smart submenus\n\nShowing and hiding submenus is implemented with a smart algorithm, as described [here](http://bjk5.com/post/44698559168/breaking-down-amazons-mega-dropdown). Also submenu positioning is made taking into account the available space. More documentation on this soon.\n\n## License\n\n```MIT```",
  "readmeFilename": "README.md",
  "gitHead": "e24e768c85059619f5cf5c32a24322387cfc2f49",
  "_id": "react-menus@1.1.0",
  "_shasum": "c9eaf56639a7bd7a9c985cff1e905ce67302bbc0",
  "_from": "react-menus@latest"
}
